$base-font-size: 16px !default;
$base-line-height: 1.25 !default;

@use "sass:math";

///*------------------------------------*\
//    #MIXINS
//\*------------------------------------*/
// font-size -- Creates the font-size appropriately setting the rem and fallbacks
@mixin font-size($font-size, $line-height: "auto", $important: false) {
  @if $important == "important" {
    $important: unquote("!important");
  } @else {
    $important: null;
  }

  font-size: $font-size $important;
  font-size: math.div($font-size, $base-font-size) * 1rem $important;

  @if $line-height == "auto" {
    line-height: ceil(math.div($font-size, $base-line-height) * math.div($base-line-height, $font-size)) $important;
  } @else {
    @if type-of($line-height) == number or $line-height == inherit or $line-height == normal {
      line-height: $line-height $important;
    } @else if $line-height != none and $line-height != false {
      @warn "D’oh! ‘#{$line-height}’ is not a valid value for `line-height`.";
    }
  }
}

// px-to-rem - Chagnes pixel sizes to REM sizes
@function px-to-rem($size) {
  @return #{math.div($size,$base-font-size)}rem;
}

// Simple breakpoint media query. Uses basic sizes to determin the upper limit and useful names to
// determine the upper boundary.
@mixin for-size($range) {
  $phone-upper-boundary: 600px !default;
  $tablet-portrait-upper-boundary: 900px !default;
  $tablet-landscape-upper-boundary: 1200px !default;
  $desktop-upper-boundary: 1800px !default;

  @if $range == phone-only {
    @media (max-width: #{$phone-upper-boundary - 1}) { @content; }
  } @else if $range == tablet-portrait-up {
    @media (min-width: $phone-upper-boundary) { @content; }
  } @else if $range == tablet-landscape-up {
    @media (min-width: $tablet-portrait-upper-boundary) { @content; }
  } @else if $range == desktop-up {
    @media (min-width: $tablet-landscape-upper-boundary) { @content; }
  } @else if $range == big-desktop-up {
    @media (min-width: $desktop-upper-boundary) { @content; }
  } @else {
    @warn "You selected a MQ size that doesn't exist. Try again.";
  }
}

//Padding mixin
@mixin padding($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

//Margin mixin
@mixin margin($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

@mixin button-colors($themeColors) {
  @each $item, $color in $themeColors {
    &--#{$item} {
      --button-color: var(--#{$item});

      @if lightness($color) <= 47 {
        --hover-color: var(--white);
      } @else {
        --hover-color: var(--umkc-dark-blue);
      }
    }
  }
}
